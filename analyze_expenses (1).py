from pymongo import MongoClient
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# K·∫øt n·ªëi MongoDB
client = MongoClient("mongodb://localhost:27017/")
db = client["finance"]
collection = db["expenses"]

# L·∫•y d·ªØ li·ªáu chi ti√™u
cursor = collection.find({"type": "Expense"})
df = pd.DataFrame(list(cursor))

# Chuy·ªÉn ki·ªÉu datetime & t·∫°o c·ªôt th·ªùi gian
df['date'] = pd.to_datetime(df['date'])
df['month'] = df['date'].dt.to_period('M').astype(str)

# Thi·∫øt l·∫≠p style chung
sns.set(style="whitegrid")


monthly_sum = df.groupby('month')['amount'].sum().sort_index()
category_sum = df.groupby('category')['amount'].sum().sort_values()

#1
# KPI: T·ªïng thu nh·∫≠p, T·ªïng chi ti√™u, S·ªë d∆∞ r√≤ng
df_income = collection.find({"type": "Income"})
df_income = pd.DataFrame(list(df_income))

df_expense = collection.find({"type": "Expense"})
df_expense = pd.DataFrame(list(df_expense))

total_income = df_income['amount'].sum()
total_expense = df_expense['amount'].sum()
net_balance = total_income - total_expense

# D·ªØ li·ªáu
kpi_labels = ["T·ªïng thu", "T·ªïng chi", "S·ªë d∆∞ r√≤ng"]
kpi_values = [total_income, total_expense, net_balance]
colors = ['green', 'red', 'blue']

plt.figure(figsize=(6, 6))
sns.barplot(x=kpi_labels, y=kpi_values, palette=colors)
plt.title("T·ªîNG QUAN T√ÄI CH√çNH", fontsize=16)
plt.ylabel("S·ªë ti·ªÅn (VND)")
for i, value in enumerate(kpi_values):
    plt.text(i, value + max(kpi_values) * 0.03, f"{value:,.0f}", ha='center', fontsize=12)
plt.tight_layout()
plt.show()



# 2Ô∏è‚É£ Bar chart: Chi ti√™u theo danh m·ª•c
# L·ªçc chi ti√™u
df_expense = df[df['type'] == 'Expense']

# Nh√≥m theo th√°ng v√† danh m·ª•c, t√≠nh t·ªïng
grouped = df_expense.groupby(['month', 'category'])['amount'].sum().reset_index()

# V·ªõi m·ªói th√°ng, t√¨m danh m·ª•c chi nhi·ªÅu nh·∫•t
idx = grouped.groupby('month')['amount'].idxmax()
top_spending = grouped.loc[idx].sort_values('month')

# V·∫Ω bi·ªÉu ƒë·ªì
import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(15, 6))
sns.barplot(data=top_spending, x='month', y='amount', hue='category', dodge=False, palette='Set2')
plt.title('Danh m·ª•c chi ti√™u nhi·ªÅu nh·∫•t m·ªói th√°ng')
plt.xlabel('Th√°ng')
plt.ylabel('S·ªë ti·ªÅn')
plt.xticks(rotation=45)
plt.legend(title='Danh m·ª•c', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.tight_layout()
plt.show()


# 3Ô∏è‚É£ Line chart: Chi ti√™u theo th√°ng
pareto = df.groupby("category")["amount"].sum().sort_values(ascending=False)
cum_pct = pareto.cumsum() / pareto.sum()

plt.figure(figsize=(10, 5))
sns.barplot(x=pareto.index, y=pareto.values, color='skyblue')
plt.plot(pareto.index, cum_pct.values, color='red', marker='o')
plt.title("Bi·ªÉu ƒë·ªì: Chi ti√™u theo danh m·ª•c", fontsize=14)
plt.ylabel("S·ªë ti·ªÅn")
plt.xticks(rotation=45)
plt.grid(axis='y')
plt.tight_layout()
plt.show()

# 4Ô∏è‚É£ Pie chart: T·ª∑ l·ªá chi ti√™u theo danh m·ª•c
plt.figure(figsize=(10, 5))
sns.boxplot(data=df, x="category", y="amount")
plt.title("Ph√¢n ph·ªëi chi ti√™u t·ª´ng danh m·ª•c ‚Äì ph√°t hi·ªán b·∫•t th∆∞·ªùng", fontsize=14)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# 5Ô∏è‚É£ Stacked area chart: Chi ti√™u c√°c danh m·ª•c theo th√°ng
# L·ªçc giao d·ªãch chi ti√™u
df_expense = df[df['type'] == 'Expense']

# S·∫Øp x·∫øp gi·∫£m d·∫ßn theo s·ªë ti·ªÅn
top10 = df_expense.sort_values(by='amount', ascending=False).head(10)

# Ch·ªçn c·ªôt c·∫ßn thi·∫øt v√† ƒë·ªãnh d·∫°ng l·∫°i ng√†y
top10_display = top10[['date', 'description', 'amount']].copy()
top10_display['date'] = pd.to_datetime(top10_display['date']).dt.strftime('%d/%m/%Y')

# T·∫°o b·∫£ng b·∫±ng matplotlib
import matplotlib.pyplot as plt

fig, ax = plt.subplots(figsize=(7, 3.5))  # ch·ªânh k√≠ch th∆∞·ªõc b·∫£ng
ax.axis('tight')
ax.axis('off')
table = ax.table(
    cellText=top10_display.values,
    colLabels=["Date", "Transaction Description", "Amount"],
    cellLoc='center',
    loc='center',
)

table.auto_set_font_size(False)
table.set_fontsize(10)
table.scale(1, 1.5)  # gi√£n d√≤ng

plt.title("10 giao d·ªãch chi l·ªõn nh·∫•t", fontsize=13, fontweight='bold', pad=10)
plt.tight_layout()
plt.show()




# --------- CRUD DEMO ---------

# CREATE
new_expense = {
    "date": "2025-05-28T00:00:00",
    "amount": 120000,
    "category": "Entertainment",
    "description": "Xem phim CGV",
    "type": "Expense",
    "user_id": "user01"
}
collection.insert_one(new_expense)
print("‚úÖ CREATE: ƒê√£ th√™m b·∫£n ghi.")

# READ
record = collection.find_one({"description": "Xem phim CGV"})
print("üìÑ READ: B·∫£n ghi t√¨m ƒë∆∞·ª£c:", record)

# UPDATE
collection.update_one(
    {"description": "Xem phim CGV"},
    {"$set": {"amount": 150000, "category": "Leisure"}}
)
print("‚úÖ UPDATE: ƒê√£ c·∫≠p nh·∫≠t b·∫£n ghi.")

# DELETE
collection.delete_one({"description": "Xem phim CGV"})
print("üóëÔ∏è DELETE: ƒê√£ xo√° b·∫£n ghi.")

# --- Insight t·ªïng k·∫øt ---
print("\nüéØ Insight t·ªïng h·ª£p:")
print("üëâ Th√°ng chi ti√™u nhi·ªÅu nh·∫•t:", monthly_sum.idxmax(), f"({monthly_sum.max():,.0f} VNƒê)")
print("üëâ Danh m·ª•c chi ti√™u cao nh·∫•t:", category_sum.idxmax(), f"({category_sum.max():,.0f} VNƒê)")
print("üëâ Trung b√¨nh chi ti√™u m·ªói th√°ng:", df.groupby('month')['amount'].sum().mean())
print("üëâ M·ª©c chi cao nh·∫•t:", df['amount'].max())






